# 例子：限流
#server:
#  port: 9011
#spring:
#  application:
#    name: gateway-limiter
#  redis:
#    host: 127.0.0.1
#    port: 6379
#    database: 0
#  cloud:
#    nacos:
#      discovery:
#        server-addr: 127.0.0.1:8848
#        heart-beat-timeout: 25
#        ip-delete-timeout: 30
#        heart-beat-interval: 20
#    gateway:
#      routes:
#        - id: limit_route
#          uri: http://httpbin.org:80/get
#          predicates:
#            - After=2017-01-20T17:42:47.789-07:00[America/Denver]
#          filters:
#            - name: RequestRateLimiter
#              # RequestRateLimiter的限流过滤器，该过滤器需要配置三个参数
#              # burstCapacity 令牌桶总数量
#              # replenishRate 令牌桶每秒填充平均速度
#              # key-resolver 用于限流的键的解析器的Bean对象的名称。他使用SpEL表达式根据#{@beanName}从Spring容器中获取Bean对象HostAddrKeyResolver
#              args:
#                key-resolve: '#{@hostAddrKeyResolver}'
#                redis-rate-limiter.replenishRate: 1
#                redis-rate-limiter.burstCapacity: 5


server:
  port: 9011
spring:
  application:
    name: gateway-server
  redis:
    host: 127.0.0.1
    port: 6379
    database: 0
  cloud:
    nacos:
      discovery:
        server-addr: 127.0.0.1:8848
        heart-beat-timeout: 25
        ip-delete-timeout: 30
        heart-beat-interval: 20
    gateway:
      routes:
        - id: modeltrain
          uri: http://httpbin.org:80/get
          predicates:
            - Path=/modeltrain/**
          filters:
            - name: RequestRateLimiter
              # RequestRateLimiter的限流过滤器，该过滤器需要配置三个参数
              # burstCapacity 令牌桶总数量
              # replenishRate 令牌桶每秒填充平均速度
              # key-resolver 用于限流的键的解析器的Bean对象的名称。他使用SpEL表达式根据#{@beanName}从Spring容器中获取Bean对象HostAddrKeyResolver
              args:
                key-resolve: '#{@hostAddrKeyResolver}'
                redis-rate-limiter.replenishRate: 1
                redis-rate-limiter.burstCapacity: 5
        - id: usercenter
          # lb代表从配置中心获取服务，且以负载均衡方式转发
          uri: lb://usercenter
          predicates:
            # 以usercenter开头的请求都负载到usercenter服务
            - Path=/usercenter/**
          filters:
            args:
              maxSize: 5000000 # 5000kb 不设置这个filter，默认限制5M的请求大小。